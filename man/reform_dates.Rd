% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reform_dates.R
\name{reform_dates}
\alias{reform_dates}
\title{Reformat dates from long to wide.}
\usage{
reform_dates(x, nsequ = NULL, start = NULL, end = NULL,
  interval = "month", conflict = "majority")
}
\arguments{
\item{x}{A \code{txvis} object}

\item{nsequ}{The number of drug treatment sequences to use (default is \code{NULL})}

\item{start}{The starting period for the date matrix. Default is the earliest date in the \code{txvis} object.}

\item{end}{The ending period for the date matrix. Default is the earliest date in the \code{txvis} object.}

\item{interval}{The length of the interval in text format.  See Details.}

\item{conflict}{Conflict resolution.}
}
\value{
A \code{data.frame}.
}
\description{
This is, broadly speaking a helper function, that turns the \code{txvis} object from a long
table to a wide table with rows for each patient
and columns for regular intervals of dates from a defined \code{start} and \code{end} along
a regular \code{interval}.  In cases where treatments overlap within a time bin there are 
three coded \code{conflict} resolution methods: (1) \code{majority} in which coding priority 
is given to the treatment that occupies the most time within the interval (2) \code{first} in 
which coding priority is given to the treatment that occurs first chronologically within the interval (3) \code{last} in which coding priority is given to the treatment that occurs last chronologically within the interval
}
\details{
The \code{interval} argument accepts a range of terms
}
\examples{

 hlth_data <- create_txvis(patient   = treat$pat_id, 
                           treatment = treat$treatment,
                           start     = treat$start,
                           end       = treat$end,
                           date_format = "\%d\%B\%Y")
                           
 wide <- reform_dates(hlth_data)

}

